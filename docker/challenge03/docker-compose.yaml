name: 'challenge03'

services:

  mongo_db:
    image: mongo:7.0.14
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USER_NAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASS
    volumes:
      - ./db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - 295topics_mongodb_data:/data/db
    networks:
      - 295topics

  mongo_express:
    image: mongo-express:1.0.2-20-alpine3.19
    restart: on-failure
    ports:
      - 8083:8081
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: $MONGO_EXPRESS_AUTH_USER_NAME
      ME_CONFIG_BASICAUTH_PASSWORD: $MONGO_EXPRESS_AUTH_PASS
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_EXPRESS_USER_NAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_EXPRESS_PASS
      ME_CONFIG_MONGODB_URL: mongodb://$MONGO_USER_NAME:$MONGO_PASS@mongo_db:27017
    networks:
      - 295topics

  backend:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile.backend
    # image: wyataco/295topics_backend
    environment:
      - DATABASE_URL=mongodb://$MONGO_USER_NAME:$MONGO_PASS@mongo_db:27017
      - DATABASE_NAME=TopicstoreDb
      - HOST=0.0.0.0
      - PORT=5000
    ports:
      - 5000:5000
    depends_on:
      - mongo_db
    networks:
      - 295topics

  frontend:
    restart: on-failure
    build:
      context: .
      dockerfile: Dockerfile.frontend
    # image: wyataco/295topics_frontend
    environment:
      - API_URI=http://backend:5000/api/topics
    ports:
      - 3000:3000
    depends_on:
      - backend
    networks:
      - 295topics

volumes:
  295topics_mongodb_data:

networks:
  295topics:
    name: 295topics_net